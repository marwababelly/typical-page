[{"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\index.js":"1","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\App.js":"2","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\Home\\Home.js":"3","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\Login\\Login.js":"4","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\MainHeader\\MainHeader.js":"5","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\MainHeader\\Navigation.js":"6","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\UI\\Button\\Button.js":"7","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\UI\\Card\\Card.js":"8"},{"size":169,"mtime":1616593928000,"results":"9","hashOfConfig":"10"},{"size":1091,"mtime":1710853130178,"results":"11","hashOfConfig":"10"},{"size":245,"mtime":1710853132944,"results":"12","hashOfConfig":"10"},{"size":3687,"mtime":1710880868195,"results":"13","hashOfConfig":"10"},{"size":368,"mtime":1616593928000,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616593928000,"results":"15","hashOfConfig":"10"},{"size":353,"mtime":1616593928000,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1616593928000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ndq1pb",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\index.js",[],["36","37"],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\App.js",[],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\Home\\Home.js",[],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\Login\\Login.js",["38"],"import React, { useEffect, useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const emailReducer = (state, action) => {\n    if (action.type === \"USER_INPUT\") {\n      return { value: action.val, isValid: action.val.includes(\"@\") };\n    }\n    if (action.type === \"USER_BLUR\") {\n      return { value: state.value, isValid: state.value.includes(\"@\") };\n    }\n    return { value: \"\", isValid: false };\n  };\n\n  const passWordReducer = (state, action) => {\n    if (action.type === \"PASSWORD_INPUT\") {\n      return { value: action.val, isValid: action.val.trim().length > 6 };\n    }\n    if (action.type === \"USER_BLUR\") {\n      return { value: state.value, isValid: state.value.trim().length > 6 };\n    }\n    return { value: \"\", isValid: false };\n  };\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passWordReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking for validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"PASSWORD_INPUT\", val: event.target.value });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"USER_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"PASSWORD_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\MainHeader\\MainHeader.js",[],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\MainHeader\\Navigation.js",[],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\UI\\Button\\Button.js",[],"E:\\React-Practis\\Tutorial's_Projects\\A_Typical_Page\\src\\components\\UI\\Card\\Card.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":57,"column":6,"nodeType":"45","endLine":57,"endColumn":33,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailIsValid' and 'passwordIsValid'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [emailIsValid, emailState, passwordIsValid, passwordState]",{"range":"52","text":"53"},[1786,1813],"[emailIsValid, emailState, passwordIsValid, passwordState]"]